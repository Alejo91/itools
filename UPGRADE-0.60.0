*************************************************************************
itools 0.60.0
*************************************************************************

These upgrade notes may not be complete. Thanks to report any problem you
find.

New Dependencies
================

The minimum required version of Python has been raised to 2.6

For compiling C modules, you need pkg-config (tested with version 0.23).

For indexing office documents, you need libraries and Python packages. See
README.txt for details.


Imports
=======

See the table below for the imports to update.

  Before (alphabetical order)    Now
  ----------------------------   ---------------------------
  handlers.Database              handlers.RWDatabase
  handlers.merge_dicts           core.merge_dicts
  handlers.Python                python.Python
  handlers.SafeDatabase          handlers.SolidDatabase
  isetup.ArchiveNotSupported     pkg.ArchiveNotSupported
  isetup.download                pkg.download
  isetup.EXTENSIONS              pkg.EXTENSIONS
  isetup.get_installed_info      pkg.get_installed_info
  isetup.get_package_version     ** NOT EXPORTED **
  isetup.PACKAGES_DB             ** NOT EXPORTED **
  isetup.packages_infos          pkg.packages_infos
  isetup.parse_package_name      pkg.parse_package_name
  isetup.PKGINFOFile             pkg.PKGINFOFile
  isetup.RFC822File              ** NOT EXPORTED **
  isetup.SetupFile               ** NOT EXPORTED **
  utils.become_daemon            core.become_daemon
  utils.DEFAULT_REPOSITORY       pkg.DEFAULT_REPOSITORY
  utils.freeze                   core.freeze
  utils.frozendict               core.frozendict
  utils.frozenlist               core.frozenlist
  utils.get_abspath              core.get_abspath
  utils.get_time_spent           core.get_time_spent
  utils.get_version              pkg.get_version
  utils.setup                    pkg.setup
  utils.vmsize                   core.vmsize
  xml.MSExcel                    office.MSExcel
  xml.MSPowerPoint               office.MSPowerPoint
  xml.MSWord                     office.MSWord
  xml.RTF                        office.RTF
  xml.translate                  xmlfile.translate
  xml.xml_to_text                ** NOT EXPORTED **
  xml.XMLFile                    xmlfile.XMLFile


Python 2.6
==========

Some changes are derived from the upgrade to Python 2.6

Formatted strings
-----------------

Usage of the 'string.Template' class is declared obsolete.  Instead use
the new formatted strings:

  # Before
  Template('hello ${name}').substitute(name='toto')

  # Now
  'hello ${name}'.format(name='toto')


itools.csv
==========

Due to the changes with xapian (cf itools.xapian) the "schema" for a CSVFile
and the "record_schema" for a Table are modified:

  # Before
  class Foo(CSVFile):

      schema = {'name': String(index='keyword')}
      columns = ['name']

  # Now
  class Foo(CSVFile):

      schema = {'name': String(is_indexed=True)}
      columns = ['name']

And it is the same thing with Table, by example:

  # Before
  class Foo(Table):

      record_schema = {'name': String(index='keyword')}

  # Now
  class Foo(Table):

      record_schema = {'name': String(is_indexed=True)}


itools.git
==========

Now the 'get_metadata' function returns all the data from the commit, not
just the committer's name and time.


itools.handlers
===============

The database API has changed a little:

  Before                          Now
  ------------------------------  ------------------------------
  ReadOnlyDatabase.add_to_cache   ReadOnlyDatabase.push_handler
  ReadOnlyDatabase.set_use_cache  ** REMOVED **


itools.pkg
==========

The API of itools.pkg (formerly known as 'itools.isetup') has changed a
little:

  Before                          Now
  ------------------------------  ------------------------------
  Dist(location)                  Bundle(location)


itools.web
==========

Many small changes have been done to the Web server.  Most are internal
so there should be little impact in applications.

(1) Now 'get_resource' returns 'None' instead of raising the 'LookupError'
exception if the requested resource does not exist:

  # Before
  try:
      resource = here.get_resource(path)
  except LookupError:
      ...
  else:
      ...

  # Now
  resource = here.get_resource(path)
  if resource is None:
      ...
  else:
      ...

(2) The 'has_resource' method has been removed:

  # Before
  if here.has_resource(path):
      ...
  else:
      ...

  # Now
  resource = here.get_resource(path)
  if resource is None:
      ...
  else:
      ...


itools.xapian
=============

(1) Several changes have been done to the way the fields to be indexed are
defined:

- The <Field> classes have been removed, now datatypes are used.
- The 'CatalogAware.get_catalog_fields' method has been removed, now the
  definition of the fields to be indexed is passed to the constructors.
- Now by default the fields are not indexed.
- The new 'is_key_field' variable says which field is the key in the catalog.

For example:

  # Before
  from itools.xapian import IntegerField, TextField
  class MyResource(CatalogAware):
      def get_catalog_fields(self):
          return [
              IntegerField('id', is_stored=True),
              TextField('name')]

  catalog = make_catalog('my_catalog')

  # Now
  from itools.datatypes import Integer, Unicode
  fields = {
      'id': Integer(is_key_field=True, is_stored=True, is_indexed=True),
      'name': Unicode(is_indexed=True)}
  catalog = make_catalog('my_database', fields)

(2) When searching now we pass de-serialized (typed) valuse. For example:

  Before                          Now
  ------------------------------  ------------------------------
  PhraseQuery('is_folder', '1')   PhraseQuery('is_folder', True)

