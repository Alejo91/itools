*************************************************************************
itools 0.60.0
*************************************************************************

These upgrade notes may not be complete. Thanks to report any problem you
find.

New Dependencies
================

The minimum required version of Python has been raised to 2.6


Imports
=======

See the table below for the imports to update.

  Before (alphabetical order)    Now
  ----------------------------   ---------------------------
  handlers.merge_dicts           core.merge_dicts
  isetup.ArchiveNotSupported     pkg.ArchiveNotSupported
  isetup.download                pkg.download
  isetup.EXTENSIONS              pkg.EXTENSIONS
  isetup.get_installed_info      pkg.get_installed_info
  isetup.get_package_version     ** NOT EXPORTED **
  isetup.PACKAGES_DB             ** NOT EXPORTED **
  isetup.packages_infos          pkg.packages_infos
  isetup.parse_package_name      pkg.parse_package_name
  isetup.PKGINFOFile             pkg.PKGINFOFile
  isetup.RFC822File              ** NOT EXPORTED **
  isetup.SetupFile               ** NOT EXPORTED **
  utils.become_daemon            core.become_daemon
  utils.DEFAULT_REPOSITORY       pkg.DEFAULT_REPOSITORY
  utils.freeze                   core.freeze
  utils.frozendict               core.frozendict
  utils.frozenlist               core.frozenlist
  utils.get_abspath              core.get_abspath
  utils.get_time_spent           core.get_time_spent
  utils.get_version              pkg.get_version
  utils.setup                    pkg.setup
  utils.vmsize                   core.vmsize


Python 2.6
==========

Some changes are derived from the upgrade to Python 2.6

Formatted strings
-----------------

Usage of the 'string.Template' class is declared obsolete.  Instead use
the new formatted strings:

  # Before
  Template('hello ${name}').substitute(name='toto')

  # Now
  'hello ${name}'.format(name='toto')


itools.git
==========

Now the 'get_metadata' function returns all the data from the commit, not
just the committer's name and time.


itools.pkg
==========

This package, formerly known as 'itools.isetup', is not anymore experimental.
The API has considerably changed.

  Before                        Now
  ----------------------------  ----------------------------
  Dist(location)                Bundle(location)


itools.web
==========

Now the web server takes the log-level as an optinal parameter, replacing
the boolean 'debug' parameter.  This gives finer granularity to control
the loggers level.

  # Before
  Server(..., debug=debug, ...)

  # Now
  Server(..., log_level=log_level, ...)


itools.xapian
=============

itools/xapian/fields.py is deleted. We use instead the itools.datatypes.
CatalogAware is now easier, we must just implement the get_catalog_values
method. Fields are given to the constructor or to make_catalog.

By example:
fields = {'id': Integer(is_key_field=True, is_stored=True, is_indexed=True),
          'name': Unicode(is_indexed=True)}
catalog = make_catalog('my_database', fields)

Warning: all options (is_key_field, is_stored and is_indexed) are now False by
default.

encode/decode use datatypes.* methods, so PhraseQuery('foo', '1') becomes
PhraseQuery('foo', True) if 'foo' is a boolean field.



