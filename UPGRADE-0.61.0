*************************************************************************
itools 0.61.0
*************************************************************************

These upgrade notes may not be complete. Thanks to report any problem you
find.

New Dependencies
================

Now libsoup 2.28 or later is required for anything related to the web
(itools.http, itools.web).

This table summurizes the new and updated dependencies:

            0.60   0.61   Used by      Home
            ----   ----   ----------   ------------------------------
glib        2.16   2.20   itools.vfs   http://www.gtk.org/
pygobject   2.16   2.18   itools.vfs   http://www.pygtk.org/
libsoup            2.28   itools.soup  http://live.gnome.org/LibSoup


Imports
=======

See the table below for the imports to update.

  Before (alphabetical order)    Now
  ----------------------------   ---------------------------
  itools.vfs                     itools.fs.vfs (*)
  itools.vfs.cwd                 itools.fs.vfs (*)

(*) The package itools.vfs has been renamed to itools.fs, and imports have
changed a little:

  Before                         Now
  ----------------------------   --------------------------
  from itools import vfs         from itools.fs import vfs
  from itools.vfs import cwd     from itools.fs import vfs

All "vfs" functions are now "vfs" methods:

  # Before
  from itools.vfs import exists
  exists(uri)

  # Now
  from itools.fs import vfs
  vfs.exists(uri)


itools.csv
==========

The class variables 'record_schema' and 'parameters_schema' have been
renamed, respectively, to 'record_properties' and 'record_parameters'.

  # Before
  class MyTable(Table):
      record_schema = {...}
      parameters_schema = {...}

  # Now
  class MyTable(Table):
      record_properties = {...}
      record_parameters = {...}


itools.datatypes
================

The obsolete functions 'is_datatype' and 'copy_datatype' have been
removed:

  # Before
  if is_datatype(datatype, Unicode):
      ...

  # Now
  if issubclass(datatype, Unicode):
      ...

And:

  # Before
  new_datatype = copy_datatype(datatype, a=5, b=3, ...)

  # Now
  new_datatype = datatype(a=5, b=3, ...)


itools.handlers
===============

(1) The "uri" attribute has been renamed to "key" as it could be anything
unique enough for a given handler database.

(2) Handlers may be attached to different filesystems (see itools.fs) so
don't call vfs directly:

  # Before
  vfs.get_mtime(self.uri)

  # After
  fs = self.get_fs()
  fs.get_mtime(self.key)

(3) Do not assume that handlers use URIs, it could be absolute paths or
anything else that makes sense to a handler database:

  # Before
  resolve_uri2(self.key, name)

  # After
  fs = self.get_fs()
  fs.resolve2(self.key, name)

(4) A database may use the new lfs module and provide faster operations when
you know you only need to access the filesystem. It is the default for
(RO)GitDatabase.

To use lfs on the RO- or RWDatabase, just pass it as the "fs" keyword to the
constructor:

  database = RODatabase(fs=lfs)


itools.ical
===========

The class variable 'schema' has been removed. To override the schema
of an iCalendar file, redefine the 'record_properties' class variable.

  # Before
  class MyCalendar(iCalendar):
      schema = {
          'MYPROPERTY': String}

  # Now
  class MyCalendar(iCalendar):
      record_properties = merge_dicts(iCalendar.record_properties,
          MYPROPERTY=String)


itools.web
==========

(1) Obsolete method 'context.has_form_value' has been removed, use instead
'context.get_form_value':

  # Before
  if context.has_form_value(name):
      ...

  # Now
  value = context.get_form_value(name)
  if value is not None:
      ...

(2) The method 'BaseForm.build_namespace' has become 'STLForm.get_namespace':

  # Before
  def get_namespace(self, resource, context):
      namespace = self.build_namespace(resource, context)

  # Now
  def get_namespace(self, resource, context):
      namespace = STLForm.get_namespace(self, resource, context)

(3) Use <button> to submit forms:

  # Before
  <input type="submit" name=";login' value="Log in" />

  # Now
  <button type="submit" name="action' value="login">Log in</button>

In the example above 'login' is a placeholder.


itools.xapian
=============

Remove obsolete method 'SearchResults.get_n_documents':

  # Before
  n = results.get_n_documents()

  # Now
  n = len(results)
